{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\source\\\\repos\\\\TipTree-2.0\\\\src\\\\pages\\\\SignupPage\\\\SignupPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport { Button, Form, Grid, Header, Segment, Image, Message } from 'semantic-ui-react';\nimport userService from '../../utils/userService';\nimport { useHistory, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignUpPage(props) {\n  _s();\n\n  const [invalidForm, setValidForm] = useState(false);\n  const [error, setError] = useState('');\n  const [state, setState] = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordConf: ''\n  });\n  const history = useHistory();\n\n  function handleChange(e) {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      // refere to the utils/userService, to look at the signup fetch function\n      await userService.signup(state); // setTheUser in our app\n\n      props.handleSignUpOrLogin(); // gets the token from localstorage and updates the user state in our app.js\n      // with the correct user object from the current token\n      // then route to the homepage\n\n      history.push('/'); // defined above from react-router-dom\n      // after this we can go whereever\n    } catch (err) {\n      console.log(err.message);\n      setError(err.message);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          as: \"h2\",\n          color: \"teal\",\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: \"https://i.imgur.com/s4LrnlU.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), \" Sign Up\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          autoComplete: \"off\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Segment, {\n            stacked: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              name: \"username\",\n              placeholder: \"username\",\n              value: state.username,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"email\",\n              value: state.email,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              name: \"password\",\n              type: \"password\",\n              placeholder: \"password\",\n              value: state.password,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              name: \"passwordConf\",\n              type: \"password\",\n              placeholder: \"Confirm Password\",\n              value: state.passwordConf,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"btn\",\n              disabled: invalidForm,\n              children: \"Signup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Message, {\n            children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Log in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this), error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            error: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 28\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(SignUpPage, \"e9dOlCp7VM08GFn0va4OacK8N08=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUpPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"sources":["C:/Users/Andrew/source/repos/TipTree-2.0/src/pages/SignupPage/SignupPage.jsx"],"names":["React","useState","ErrorMessage","Button","Form","Grid","Header","Segment","Image","Message","userService","useHistory","Link","SignUpPage","props","invalidForm","setValidForm","error","setError","state","setState","username","email","password","passwordConf","history","handleChange","e","target","name","value","handleSubmit","preventDefault","signup","handleSignUpOrLogin","push","err","console","log","message","height","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\r\nimport { Button, Form, Grid, Header, Segment, Image, Message } from 'semantic-ui-react'\r\nimport userService from '../../utils/userService';\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\nexport default function SignUpPage(props) {\r\n    const [invalidForm, setValidForm] = useState(false)\r\n    const [error, setError] = useState('')\r\n    const [state, setState] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        passwordConf: '',\r\n    });\r\n\r\n    const history = useHistory()\r\n    function handleChange(e) {\r\n            setState({\r\n                ...state,\r\n                [e.target.name]: e.target.value\r\n            })\r\n    }\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        try {\r\n            // refere to the utils/userService, to look at the signup fetch function\r\n            await userService.signup(state);\r\n            // setTheUser in our app\r\n            props.handleSignUpOrLogin() // gets the token from localstorage and updates the user state in our app.js\r\n            // with the correct user object from the current token\r\n            // then route to the homepage\r\n            history.push('/') // defined above from react-router-dom\r\n            // after this we can go whereever\r\n\r\n        } catch (err) {\r\n            console.log(err.message)\r\n            setError(err.message)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n          <Grid.Column style={{ maxWidth: 450 }}>\r\n              <Header as='h2' color='teal' textAlign='center'>\r\n                <Image src='https://i.imgur.com/s4LrnlU.png' /> Sign Up    \r\n              </Header>            \r\n                <Form autoComplete=\"off\"  onSubmit={handleSubmit}>\r\n                <Segment stacked>               \r\n                    <Form.Input                    \r\n                      name=\"username\"\r\n                      placeholder=\"username\"\r\n                      value={state.username}\r\n                      onChange={handleChange}\r\n                      required\r\n                    />\r\n                    <Form.Input\r\n                      type=\"email\"                  \r\n                      name=\"email\"\r\n                      placeholder=\"email\"\r\n                      value={ state.email}\r\n                      onChange={handleChange}\r\n                      required\r\n                    />\r\n                    <Form.Input             \r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      placeholder=\"password\"\r\n                      value={ state.password}\r\n                      onChange={handleChange}\r\n                      required\r\n                    />\r\n                    <Form.Input     \r\n                      name=\"passwordConf\"\r\n                      type=\"password\"\r\n                      placeholder=\"Confirm Password\"\r\n                      value={ state.passwordConf}\r\n                      onChange={handleChange}\r\n                      required\r\n                    />\r\n                    <Button\r\n                      type=\"submit\"\r\n                      className=\"btn\"\r\n                      disabled={invalidForm}\r\n                    >\r\n                    Signup\r\n                  </Button>\r\n                  </Segment>\r\n                  <Message>\r\n              Already have an account? <Link to='/login'>Log in</Link>\r\n            </Message>\r\n                  {error ? <ErrorMessage error={error} /> : null}\r\n                </Form>\r\n               \r\n            </Grid.Column>\r\n          </Grid>\r\n        </>\r\n      );   \r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}