{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\source\\\\repos\\\\TipTree-2.0\\\\src\\\\pages\\\\App\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport SignupPage from \"../SignupPage/SignupPage\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport userService from \"../../utils/userService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState(userService.getUser()); // getUser decodes our JWT token, into a javascript object\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like\n  // this  const token = createJWT(user); // where user was the document we created from mongo\n\n  function handleSignUpOrLogin() {\n    setUser(userService.getUser()); // getting the user from localstorage decoding the jwt\n  }\n\n  function handleLogout() {\n    userService.logout();\n    setUser(null);\n  }\n\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This is Home Page!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {\n          handleSignUpOrLogin: handleSignUpOrLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(SignupPage, {\n          handleSignUpOrLogin: handleSignUpOrLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(LoginPage, {\n        handleSignUpOrLogin: handleSignUpOrLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/signup\",\n      element: /*#__PURE__*/_jsxDEV(SignupPage, {\n        handleSignUpOrLogin: handleSignUpOrLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/*\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"d433BNb37faEp65cAsZrPTk+Szo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Andrew/source/repos/TipTree-2.0/src/pages/App/App.jsx"],"names":["React","useState","Navigate","Route","Routes","SignupPage","LoginPage","userService","App","user","setUser","getUser","handleSignUpOrLogin","handleLogout","logout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,MAA1B,QAAwC,kBAAxC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACM,WAAW,CAACI,OAAZ,EAAD,CAAhC,CADa,CAC4C;AACzD;AACA;;AAEA,WAASC,mBAAT,GAA+B;AAC7BF,IAAAA,OAAO,CAACH,WAAW,CAACI,OAAZ,EAAD,CAAP,CAD6B,CACG;AACjC;;AAED,WAASE,YAAT,GAAwB;AACtBN,IAAAA,WAAW,CAACO,MAAZ;AACAJ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AAED,MAAID,IAAJ,EAAU;AACR,wBACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,eAAE,QAAC,SAAD;AAAW,UAAA,mBAAmB,EAAEG;AAAhC;AAAA;AAAA;AAAA;AAAA;AAFX;AAAA;AAAA;AAAA;AAAA,cAFF,eAME,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,OAAO,eAAE,QAAC,UAAD;AAAY,UAAA,mBAAmB,EAAEA;AAAjC;AAAA;AAAA;AAAA;AAAA;AAFX;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAED,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,eAAE,QAAC,SAAD;AAAW,QAAA,mBAAmB,EAAEA;AAAhC;AAAA;AAAA;AAAA;AAAA;AAFX;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,OAAO,eAAE,QAAC,UAAD;AAAY,QAAA,mBAAmB,EAAEA;AAAjC;AAAA;AAAA;AAAA;AAAA;AAFX;AAAA;AAAA;AAAA;AAAA,YALF,eASE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,IAAZ;AAAiB,MAAA,OAAO,eAAE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA3CQJ,G;;KAAAA,G;AA6CT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Navigate, Route, Routes } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport SignupPage from \"../SignupPage/SignupPage\";\r\nimport LoginPage from \"../LoginPage/LoginPage\";\r\nimport userService from \"../../utils/userService\";\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(userService.getUser()); // getUser decodes our JWT token, into a javascript object\r\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like\r\n  // this  const token = createJWT(user); // where user was the document we created from mongo\r\n\r\n  function handleSignUpOrLogin() {\r\n    setUser(userService.getUser()); // getting the user from localstorage decoding the jwt\r\n  }\r\n\r\n  function handleLogout() {\r\n    userService.logout();\r\n    setUser(null);\r\n  }\r\n\r\n  if (user) {\r\n    return (\r\n      <Routes>\r\n        <Route path=\"/\" element={<h1>This is Home Page!</h1>} />\r\n        <Route\r\n          path=\"/login\"\r\n          element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\r\n        />\r\n        <Route\r\n          path=\"/signup\"\r\n          element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\r\n        />\r\n      </Routes>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Routes>\r\n      <Route\r\n        path=\"/login\"\r\n        element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\r\n      />\r\n      <Route\r\n        path=\"/signup\"\r\n        element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\r\n      />\r\n      <Route path=\"/*\" element={<Navigate to=\"/login\" />} />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}